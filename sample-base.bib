@misc{ammermann2023quantumcomputingimproveuniform,
      title={Can Quantum Computing Improve Uniform Random Sampling of Large Configuration Spaces? (Preprint)}, 
      author={Joshua Ammermann and Tim Bittner and Domenik Eichhorn and Ina Schaefer and Christoph Seidl},
      year={2023},
      eprint={2307.14703},
      archivePrefix={arXiv},
      primaryClass={quant-ph},
      url={https://arxiv.org/abs/2307.14703}, 
}

@mastersthesis{thesis-marwin-kadner,
    author = {Marwin Kadner},
    title = {Towards Improved Uniform Random Sampling using Grover’s Algorithm},
    school = {Karlsruhe Institute of Technology},
    year = {2023},
    type = {Bachelor Thesis},
    url = {https://github.com/kadnermarwin/Bachelorarbeit-Marwin-Kadner}
}

@misc{grover1996,
      title={A fast quantum mechanical algorithm for database search}, 
      author={Lov K. Grover},
      year={1996},
      eprint={quant-ph/9605043},
      archivePrefix={arXiv},
      primaryClass={quant-ph},
      url={https://arxiv.org/abs/quant-ph/9605043}, 
}
@inbook{spl-pohl,
author = {Pohl, Klaus and Metzger, Andreas},
year = {2018},
month = {06},
pages = {185-201},
title = {Software Product Lines},
isbn = {978-3-319-73896-3},
doi = {10.1007/978-3-319-73897-0_11}
}
@inproceedings{sunderman-spl-sat,
author = {Sundermann, Chico and Th\"{u}m, Thomas and Schaefer, Ina},
title = {Evaluating SAT solvers on industrial feature models},
year = {2020},
isbn = {9781450375016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3377024.3377025},
doi = {10.1145/3377024.3377025},
abstract = {Configurable systems are widely used for families of products that share multiple configuration options. These systems often induce a large configuration space. Handling the variability of such a system is difficult without being able to measure its complexity. Several methods depend on computing the number of valid configurations, such as estimating the effort of an update or effectively reducing the variability of a system. In many cases, it is possible to map a configurable system to propositional logic. Therefore, we use #SAT in order to evaluate variability of such systems. A SAT solver computes the number of valid assignments of a propositional formula. However, this problem is even harder than SAT. The main contribution of our work is an investigation of the scalability of off-the-shelf #SAT solvers on industrial feature models. Additionally, we examine the correlation between size of a system and the runtime of a solver computing the number of valid configurations. In this paper, we empirically evaluate nine publicly available SAT solvers on 127 industrial feature models. Our results indicate that current solvers master a majority of the evaluated systems. However, there are large models, for which none of the evaluated solvers scales. Nevertheless, there are even larger and more complex systems for which the solvers scale.},
booktitle = {Proceedings of the 14th International Working Conference on Variability Modelling of Software-Intensive Systems},
articleno = {3},
numpages = {9},
keywords = {product lines, model counting, feature models, configuration counting, configurable systems, SAT},
location = {Magdeburg, Germany},
series = {VaMoS '20}
}
@inproceedings{KAK:GPCE09,
	author = {Christian K\"astner and Sven Apel and Martin Kuhlemann},
	title = {{A Model of Refactoring Physically and Virtually Separated Features}},
	booktitle = GPCE,
  pages = {157--166},
	location = {Denver, CO, USA},
	publisher = {ACM},
	month = OCT,
	year = 2009
}

@techreport{KCHNP:TR90,
  author = {Kyo C. Kang and Sholom G. Cohen and James A. Hess and William E. Novak and A. Spencer Peterson},
  title = {{Feature-Oriented Domain Analysis (FODA) Feasibility Study}},
  institution = {Software Engineering Institute},
  number = {CMU/SEI-90-TR-21},
  year = 1990
}
@Article{math11081888,
AUTHOR = {Paulet, Jose J. and LLana, Luis F. and Calvo, Hernán Indíbil and Mezzini, Mauro and Cuartero, Fernando and Pelayo, Fernando L.},
TITLE = {Heuristics for Quantum Computing Dealing with 3-SAT},
JOURNAL = {Mathematics},
VOLUME = {11},
YEAR = {2023},
NUMBER = {8},
ARTICLE-NUMBER = {1888},
URL = {https://www.mdpi.com/2227-7390/11/8/1888},
ISSN = {2227-7390},
ABSTRACT = {The SAT problem is maybe one of the most famous NP-complete problems. This paper deals with the 3-SAT problem. We follow a sort of incremental strategy to save computational costs with respect to the classical quantum computing approach. We present an heuristics that leads this strategy, improving the performance of the purely random incremental scheme. We finally validate our approach by means of a thorough empirical study.},
DOI = {10.3390/math11081888 }
},
@INPROCEEDINGS{plazar-spl-sampling,
  author={Plazar, Quentin and Acher, Mathieu and Perrouin, Gilles and Devroey, Xavier and Cordy, Maxime},
  booktitle={2019 12th IEEE Conference on Software Testing, Validation and Verification (ICST)}, 
  title={Uniform Sampling of SAT Solutions for Configurable Systems: Are We There Yet?}, 
  year={2019},
  volume={},
  number={},
  pages={240-251},
  doi={10.1109/ICST.2019.00032 }
},
@book{ClementsSoftwareProduct2001,
title = {Software Product Lines: Practices and Patterns},
author={Paul Clements and Linda Northrop},
year={2001},
publisher={Addison-Wesley Professional},
},
@inproceedings{dutra-sat-sampling,   
author = {Dutra, Rafael and Laeufer, Kevin and Bachrach, Jonathan and Sen, Koushik},
title = {Efficient Sampling of SAT Solutions for Testing},
year = {2018},
isbn = {9781450356381   },
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3180155.3180248   },
doi = {10.1145/3180155.3180248  },
abstract = {In software and hardware testing, generating multiple inputs which satisfy a given set of constraints is an important problem with applications in fuzz testing and stimulus generation. However, it is a challenge to perform the sampling efficiently, while generating a diverse set of inputs which satisfy the constraints. We developed a new algorithm QuickSampler which requires a small number of solver calls to produce millions of samples which satisfy the constraints with high probability. We evaluate QuickSampler on large real-world benchmarks and show that it can produce unique valid solutions orders of magnitude faster than other state-of-the-art sampling tools, with a distribution which is reasonably close to uniform in practice.},
booktitle = {Proceedings of the 40th International Conference on Software Engineering},
pages = {549–559},
numpages = {11},
keywords = {sampling, stimulus generation, constrained-random verification, constraint-based testing},
location = {Gothenburg, Sweden},
series = {ICSE '18}
},
@article{OpenQASM3.0,
	doi = {10.1145/3505636},
  
	url = {https://doi.org/10.1145%2F3505636},
  
	year = 2022,
	month = {sep},
  
	publisher = {Association for Computing Machinery ({ACM})},
  
	volume = {3},
  
	number = {3},
  
	pages = {1--50},
  
	author = {Andrew Cross and Ali Javadi-Abhari and Thomas Alexander and Niel De Beaudrap and Lev S. Bishop and Steven Heidel and Colm A. Ryan and Prasahnt Sivarajah and John Smolin and Jay M. Gambetta and Blake R. Johnson},
  
	title = {{OpenQASM}~3: A Broader and Deeper Quantum Assembly Language},
  
	journal = {{ACM} Transactions on Quantum Computing}
},
@misc{Qiskit,
    author = {{Qiskit contributors}},
    title = {Qiskit: An Open-source Framework for Quantum Computing},
    year = {2023},
    doi = {10.5281/zenodo.2573505}
},
@article{Hangleiter_2023,
   title={Computational advantage of quantum random sampling},
   volume={95},
   ISSN={1539-0756},
   url={http://dx.doi.org/10.1103/RevModPhys.95.035001},
   DOI={10.1103/revmodphys.95.035001},
   number={3},
   journal={Reviews of Modern Physics},
   publisher={American Physical Society (APS)},
   author={Hangleiter, Dominik and Eisert, Jens},
   year={2023},
   month=jul 
},
@misc{li2023resource,
      title={Resource Efficient Boolean Function Solver on Quantum Computer}, 
      author={Xiang Li and Hanxiang Shen and Weiguo Gao and Yingzhou Li},
      year={2023},
      eprint={2310.05013},
      archivePrefix={arXiv},
      primaryClass={quant-ph}
},
@misc{cross2017open,
      title={Open Quantum Assembly Language}, 
      author={Andrew W. Cross and Lev S. Bishop and John A. Smolin and Jay M. Gambetta},
      year={2017},
      eprint={1707.03429},
      archivePrefix={arXiv},
      primaryClass={quant-ph}
},
@article{Kitaev_1997,
doi = {10.1070/RM1997v052n06ABEH002155},
url = {https://dx.doi.org/10.1070/RM1997v052n06ABEH002155},
year = {1997},
month = {dec},
publisher = {},
volume = {52},
number = {6},
pages = {1191},
author = {A Yu Kitaev},
title = {Quantum computations: algorithms and error correction},
journal = {Russian Mathematical Surveys},
abstract = {Contents  §0. Introduction  §1. Abelian problem on the stabilizer  §2. Classical models of computations 2.1. Boolean schemes and sequences of operations 2.2. Reversible computations  §3. Quantum formalism 3.1. Basic notions and notation 3.2. Transformations of mixed states 3.3. Accuracy  §4. Quantum models of computations 4.1. Definitions and basic properties 4.2. Construction of various operators from the elements of a basis 4.3. Generalized quantum control and universal schemes  §5. Measurement operators  §6. Polynomial quantum algorithm for the stabilizer problem  §7. Computations with perturbations: the choice of a model  §8. Quantum codes (definitions and general properties) 8.1. Basic notions and ideas 8.2. One-to-one codes 8.3. Many-to-one codes  §9. Symplectic (additive) codes 9.1. Algebraic preparation 9.2. The basic construction 9.3. Error correction procedure 9.4. Torus codes  §10. Error correction in the computation process: general principles 10.1. Definitions and results 10.2. Proofs  §11. Error correction: concrete procedures 11.1. The symplecto-classical case 11.2. The case of a complete basis

Bibliography}
},
@inproceedings{burst-suite,
author = {Acher, Mathieu and Perrouin, Gilles and Cordy, Maxime},
title = {BURST: a benchmarking platform for uniform random sampling techniques},
year = {2021},
isbn = {9781450384704},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3461002.3473070},
doi = {10.1145/3461002.3473070},
abstract = {We present BURST, a benchmarking platform for uniform random sampling techniques. With BURST, researchers have a flexible, controlled environment in which they can evaluate the scalability and uniformity of their sampling. BURST comes with an extensive --- and extensible --- benchmark dataset comprising 128 feature models, including challenging, real-world models of the Linux kernel. BURST takes as inputs a sampling tool, a set of feature models and a sampling budget. It automatically translates any feature model of the set in DIMACS and invokes the sampling tool to generate the budgeted number of samples. To evaluate the scalability of the sampling tool, BURST measures the time the tool needs to produce the requested sample. To evaluate the uniformity of the produced sample, BURST integrates the state-of-the-art and proven statistical test Barbarik. We envision BURST to become the starting point of a standardisation initiative of sampling tool evaluation. Given the huge interest of research for sampling algorithms and tools, this initiative would have the potential to reach and crosscut multiple research communities including AI, ML, SAT and SPL.},
booktitle = {Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume B},
pages = {36–40},
numpages = {5},
keywords = {SAT, benchmark, configurable systems, sampling, software product lines, variability model},
location = {Leicester, United Kindom},
series = {SPLC '21}
}
@article{feature_ide,
author = {Thüm, Thomas and Kästner, Christian and Benduhn, Fabian and Meinicke, Jens and Saake, Gunter and Leich, Thomas},
year = {2014},
month = {01},
pages = {},
title = {FeatureIDE: An Extensible Framework for Feature-Oriented Software Development},
journal = {Science of Computer Programming},
doi = {10.1016/j.scico.2012.06.002}
}

@inproceedings{oh-spl-random-sampling,
author = {Oh, Jeho and Batory, Don and Myers, Margaret and Siegmund, Norbert},
title = {Finding near-optimal configurations in product lines by random sampling},
year = {2017},
isbn = {9781450351058},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3106237.3106273},
doi = {10.1145/3106237.3106273},
abstract = {Software Product Lines (SPLs) are highly configurable systems. This raises the challenge to find optimal performing configurations for an anticipated workload. As SPL configuration spaces are huge, it is infeasible to benchmark all configurations to find an optimal one. Prior work focused on building performance models to predict and optimize SPL configurations. Instead, we randomly sample and recursively search a configuration space directly to find near-optimal configurations without constructing a prediction model. Our algorithms are simpler and have higher accuracy and efficiency.},
booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
pages = {61–71},
numpages = {11},
keywords = {software product lines, searching configuration spaces, finding optimal configurations},
location = {Paderborn, Germany},
series = {ESEC/FSE 2017}
}

@inproceedings{oh-t-wise,
author = {Oh, Jeho and Gazzillo, Paul and Batory, Don},
title = {t-wise Coverage by Uniform Sampling},
year = {2019},
isbn = {9781450371384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3336294.3342359},
doi = {10.1145/3336294.3342359},
abstract = {Efficiently testing large configuration spaces of Software Product Lines (SPLs) needs a sampling algorithm that is both scalable and provides good t-wise coverage. The 2019 SPLC Sampling Challenge provides large real-world feature models and asks for a t-wise sampling algorithm that can work for those models.We evaluated t-wise coverage by uniform sampling (US) the configurations of one of the provided feature models. US means that every (legal) configuration is equally likely to be selected. US yields statistically representative samples of a configuration space and can be used as a baseline to compare other sampling algorithms.We used existing algorithm called Smarch to uniformly sample SPL configurations. While uniform sampling alone was not enough to produce 100\% 1-wise and 2-wise coverage, we used standard probabilistic analysis to explain our experimental results and to conjecture how uniform sampling may enhance the scalability of existing t-wise sampling algorithms.},
booktitle = {Proceedings of the 23rd International Systems and Software Product Line Conference - Volume A},
pages = {84–87},
numpages = {4},
keywords = {t-wise coverage, software product lines, uniform sampling},
location = {Paris, France},
series = {SPLC '19}
}

@misc{cross2017openquantumassemblylanguage,
      title={Open Quantum Assembly Language}, 
      author={Andrew W. Cross and Lev S. Bishop and John A. Smolin and Jay M. Gambetta},
      year={2017},
      eprint={1707.03429},
      archivePrefix={arXiv},
      primaryClass={quant-ph},
      url={https://arxiv.org/abs/1707.03429}, 
}